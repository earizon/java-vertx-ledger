Get Config parameters related to ILP protocol:
import org.interledger.ilp.core.LedgerInfo;
import org.interledger.ilp.ledger.LedgerFactory;
    LedgerInfo ledgerInfo = LedgerFactory.getDefaultLedger().getInfo();
    String baseUri = ledgerInfo.getBaseUri(); // Note the baseUri contains a trailing '/' character

-------------------
import org.interledger.ilp.common.config.Config;
import org.interledger.ilp.ledger.LedgerFactory;
import org.interledger.ilp.ledger.impl.simple.SimpleLedger;

Get Internal Config parameters (related to ledger implementation):
    Config config = ((SimpleLedger)LedgerFactory.getDefaultLedger()).getConfig();
    String public_key = config.getString(SERVER, ED25519, PUBLIC_KEY);

-------------------

Abort request and Launch Exception:
    if ("failed assertCondition") {
        throw new InterledgerException(InterledgerException.RegisteredException.BadRequestError, "Required param ...");
    }

    Note:
    This InterledgerException is captured by default in RestEndpointHandler.java and a JSON response mapping
    the exception is returned. The RestEndpointHandler related code is similar to:
        | try {
        |     switch (context.request().method()) {
        |         case GET:
        |             handleGet(context);
        |             break;
        |         ...
        |     }
        | } catch (InterledgerException ex ) {
        |     response(context, ex.getException().getHTTPErrorCode(), buildJSON(ex.getException().getsID(), ex.getDescription()));
        | }


